{"doc":"","fields":[],"enumConstants":[],"methods":[{"name":"generateOrders","paramTypes":["int","ca.mcgill.ecse321group1.gamestore.dto.CustomerOrderCreationDto"],"doc":" Creates customer orders from a nonempty cart and returns shared id. \n @param cid The customer ID whose cart we want to create an order from\n @param request The CustomerOrderCreationDto object with order attributes.\n @return A customerOrderListDto of all customer orders in the order as CustomerOrderResponseDtos \n"},{"name":"getCustomerOrderBySharedId","paramTypes":["int"],"doc":" Get customer order objects by shared ID \n @param sid Shared ID of the customer orders\n @return The list of Customer Order objects as a CustomerOrderListDto\n"},{"name":"deleteOrders","paramTypes":["int"],"doc":" Delete set of CustomerOrders by shared id\n @param sid The shared id of the customer orders that you want to delete\n"},{"name":"getOrderPrice","paramTypes":["int"],"doc":" Calculate price of set of customer orders \n @param sid The shared ID of customer orders\n @return Float of the total price\n"},{"name":"getUnsatisfied","paramTypes":["int"],"doc":" Get all unsatisfied orders for a particular game \n @param vid The video game ID\n @return The list of customer orders of the particular game that are unsatisfied as a CustomerOrderListDto\n"},{"name":"setSatisfied","paramTypes":["ca.mcgill.ecse321group1.gamestore.dto.CustomerOrderListDto"],"doc":" Make list of orders satisfied or unsatisfied \n @param sat Boolean. True sets orders passed in all to satisfied, vice versa for false.\n @param orders List of customer orders we want to change satisfied parameter as a CustomerOrderListDto\n"},{"name":"getSpecificCustomerOrder","paramTypes":["int"],"doc":" Get all customer orders\n @param cid The customer ID of the customer whom you want to get all orders for.\n @return All customer order of a customer \n"}],"constructors":[]}